// 格式化时间戳
var formatTime = function (date) {
  var year = date.getFullYear()
  var month = date.getMonth() + 1
  var day = date.getDate()
  var hour = date.getHours()
  var minute = date.getMinutes()
  var second = date.getSeconds()

  return [year, month, day].map(formatNumber).join('/') + ' '+ [hour, minute, second].map(formatNumber).join(':')
}

var formatNumber = function (n) {
  n = n.toString()
  return n[1] ? n : '0' + n
}

// 格式化数字单位
var formatNumberUnit = function (number) {
  var unit = '';
  var k = 10000,
  sizes = ['', '万', '亿', '万亿'],
  i;
  if (parseInt(number) < k) {
    return number
  } else {
    i = Math.floor(Math.log(number) / Math.log(k));
    number = ((number / Math.pow(k, i))).toFixed(0);
    unit = sizes[i];
  }
  return number + unit
}

// 格式化推荐理由
var formatReasons = function (reasonsList, id) {
  for (var i = 0; i < reasonsList.length; i++) {
    if (reasonsList[i].songId == id) {
      return reasonsList[i].reason
    }
  }
}
// 格式化歌曲作者
var formatAr = function (songInfo) {
  var ar = songInfo.ar
  var al = songInfo.al
  var originSongSimpleData = songInfo.originSongSimpleData
  if (originSongSimpleData) {
    var origin = " | 原唱： " + originSongSimpleData.artists[0].name
  } else {
    var origin = ''
  }
  if (ar.length == 1) {
    var ars = ar[0].name
  } else {
    var ars = ''
    ar.forEach(function (item, index) {
      index > 0 ? ars += '/' + item.name : ars += item.name
    })
  }
  return ars + ' - ' + al.name + origin
}

module.exports = {
  formatTime: formatTime,
  formatNumber: formatNumber,
  formatNumberUnit: formatNumberUnit,
  formatReasons: formatReasons,
  formatAr: formatAr
}
